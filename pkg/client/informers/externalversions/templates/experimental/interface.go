// This file was automatically generated by informer-gen

package experimental

import (
	internalinterfaces "github.com/Azure/service-catalog-templates/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// BindingTemplates returns a BindingTemplateInformer.
	BindingTemplates() BindingTemplateInformer
	// CatalogBindings returns a CatalogBindingInformer.
	CatalogBindings() CatalogBindingInformer
	// CatalogInstances returns a CatalogInstanceInformer.
	CatalogInstances() CatalogInstanceInformer
	// InstanceTemplates returns a InstanceTemplateInformer.
	InstanceTemplates() InstanceTemplateInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// BindingTemplates returns a BindingTemplateInformer.
func (v *version) BindingTemplates() BindingTemplateInformer {
	return &bindingTemplateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CatalogBindings returns a CatalogBindingInformer.
func (v *version) CatalogBindings() CatalogBindingInformer {
	return &catalogBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CatalogInstances returns a CatalogInstanceInformer.
func (v *version) CatalogInstances() CatalogInstanceInformer {
	return &catalogInstanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceTemplates returns a InstanceTemplateInformer.
func (v *version) InstanceTemplates() InstanceTemplateInformer {
	return &instanceTemplateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
