// This file was automatically generated by lister-gen

package experimental

import (
	experimental "github.com/Azure/service-catalog-templates/pkg/apis/templates/experimental"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CatalogInstanceLister helps list CatalogInstances.
type CatalogInstanceLister interface {
	// List lists all CatalogInstances in the indexer.
	List(selector labels.Selector) (ret []*experimental.CatalogInstance, err error)
	// CatalogInstances returns an object that can list and get CatalogInstances.
	CatalogInstances(namespace string) CatalogInstanceNamespaceLister
	CatalogInstanceListerExpansion
}

// catalogInstanceLister implements the CatalogInstanceLister interface.
type catalogInstanceLister struct {
	indexer cache.Indexer
}

// NewCatalogInstanceLister returns a new CatalogInstanceLister.
func NewCatalogInstanceLister(indexer cache.Indexer) CatalogInstanceLister {
	return &catalogInstanceLister{indexer: indexer}
}

// List lists all CatalogInstances in the indexer.
func (s *catalogInstanceLister) List(selector labels.Selector) (ret []*experimental.CatalogInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*experimental.CatalogInstance))
	})
	return ret, err
}

// CatalogInstances returns an object that can list and get CatalogInstances.
func (s *catalogInstanceLister) CatalogInstances(namespace string) CatalogInstanceNamespaceLister {
	return catalogInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CatalogInstanceNamespaceLister helps list and get CatalogInstances.
type CatalogInstanceNamespaceLister interface {
	// List lists all CatalogInstances in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*experimental.CatalogInstance, err error)
	// Get retrieves the CatalogInstance from the indexer for a given namespace and name.
	Get(name string) (*experimental.CatalogInstance, error)
	CatalogInstanceNamespaceListerExpansion
}

// catalogInstanceNamespaceLister implements the CatalogInstanceNamespaceLister
// interface.
type catalogInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CatalogInstances in the indexer for a given namespace.
func (s catalogInstanceNamespaceLister) List(selector labels.Selector) (ret []*experimental.CatalogInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*experimental.CatalogInstance))
	})
	return ret, err
}

// Get retrieves the CatalogInstance from the indexer for a given namespace and name.
func (s catalogInstanceNamespaceLister) Get(name string) (*experimental.CatalogInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(experimental.Resource("cataloginstance"), name)
	}
	return obj.(*experimental.CatalogInstance), nil
}
