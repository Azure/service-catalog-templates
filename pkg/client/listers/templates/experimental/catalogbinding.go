// This file was automatically generated by lister-gen

package experimental

import (
	experimental "github.com/Azure/service-catalog-templates/pkg/apis/templates/experimental"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CatalogBindingLister helps list CatalogBindings.
type CatalogBindingLister interface {
	// List lists all CatalogBindings in the indexer.
	List(selector labels.Selector) (ret []*experimental.CatalogBinding, err error)
	// CatalogBindings returns an object that can list and get CatalogBindings.
	CatalogBindings(namespace string) CatalogBindingNamespaceLister
	CatalogBindingListerExpansion
}

// catalogBindingLister implements the CatalogBindingLister interface.
type catalogBindingLister struct {
	indexer cache.Indexer
}

// NewCatalogBindingLister returns a new CatalogBindingLister.
func NewCatalogBindingLister(indexer cache.Indexer) CatalogBindingLister {
	return &catalogBindingLister{indexer: indexer}
}

// List lists all CatalogBindings in the indexer.
func (s *catalogBindingLister) List(selector labels.Selector) (ret []*experimental.CatalogBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*experimental.CatalogBinding))
	})
	return ret, err
}

// CatalogBindings returns an object that can list and get CatalogBindings.
func (s *catalogBindingLister) CatalogBindings(namespace string) CatalogBindingNamespaceLister {
	return catalogBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CatalogBindingNamespaceLister helps list and get CatalogBindings.
type CatalogBindingNamespaceLister interface {
	// List lists all CatalogBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*experimental.CatalogBinding, err error)
	// Get retrieves the CatalogBinding from the indexer for a given namespace and name.
	Get(name string) (*experimental.CatalogBinding, error)
	CatalogBindingNamespaceListerExpansion
}

// catalogBindingNamespaceLister implements the CatalogBindingNamespaceLister
// interface.
type catalogBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CatalogBindings in the indexer for a given namespace.
func (s catalogBindingNamespaceLister) List(selector labels.Selector) (ret []*experimental.CatalogBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*experimental.CatalogBinding))
	})
	return ret, err
}

// Get retrieves the CatalogBinding from the indexer for a given namespace and name.
func (s catalogBindingNamespaceLister) Get(name string) (*experimental.CatalogBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(experimental.Resource("catalogbinding"), name)
	}
	return obj.(*experimental.CatalogBinding), nil
}
